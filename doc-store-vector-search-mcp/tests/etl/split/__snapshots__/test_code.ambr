# serializer version: 1
# name: test_codesplitter_splits_by_language_syntax[golang]
  list([
    Document(metadata={'order': 0}, page_content='package main\n\nimport "fmt"\n\ntype Manager struct {\n    name string\n}\n\ntype SubManager struct {\n    Manager\n    age int\n}\n\nfunc (m *Manager) String() string {\n    return fmt.Sprintf("Manager(name=%s)", m.name)\n}'),
    Document(metadata={'order': 1}, page_content='func (m *SubManager) String() string {\n    return fmt.Sprintf("SubManager(name=%s, age=%d)", m.name, m.age)\n}\n\nfunc main() {\n    manager := Manager{name: "John"}\n    fmt.Println(manager)\n\n    subManager := SubManager{Manager: manager, age: 30}\n    fmt.Println(subManager)\n}'),
  ])
# ---
# name: test_codesplitter_splits_by_language_syntax[python]
  list([
    Document(metadata={'order': 0}, page_content='import os\n\nclass Manager:\n    \'\'\'Docstring for Manager class\'\'\'\n    def __init__(self, name: str):\n        self.name = name\n\n    def __str__(self):\n        return f"Manager(name={self.name})"'),
    Document(metadata={'order': 1}, page_content='class SubManager(Manager):\n    def __init__(self, name: str, age: int):\n        super().__init__(name)\n        self.age = age\n\n    def __str__(self):\n        return f"SubManager(name={self.name}, age={self.age})"'),
    Document(metadata={'order': 2}, page_content='def main():\n    manager = Manager("John")\n    print(manager)\n\n    subManager = SubManager(manager, 30)\n    print(subManager)\n\nif __name__ == "__main__":\n    main()'),
  ])
# ---
